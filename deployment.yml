apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
    worker_connections  10240;
    }
    http {
      server {
      listen       80;
      server_name  localhost;
      location / {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.21.1-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-conf
        - mountPath: /etc/nginx
          name: auth-nginx
        env:
        - name: NGINX_USERNAME
          valueFrom:
            secretKeyRef:
              name: sf-auth-nginx
              key: username
        - name: NGINX_PASSWORD
          valueFrom:  
            secretKeyRef:
              name: sf-auth-nginx
              key: password
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf 
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: auth-nginx
        configMap:
          name: nginx-htppass

---
apiVersion: v1
kind: Service
metadata:
  name: sf-webserver
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: nginx

---
apiVersion: v1
kind: Secret
metadata:
  name: sf-auth-nginx
type: kubernetes.io/basic-auth
stringData:
  username: user-sf
  password: password-sf